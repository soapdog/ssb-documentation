# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  #CHROME_BIN: "/usr/bin/chromium-browser"
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: browser-actions/setup-chrome@latest

      # Runs a set of commands using the runners shell
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libreadline-dev unzip
          sudo apt-get install -y pandoc texlive-latex-base texlive-fonts-recommended texlive-extra-utils texlive-latex-extra texlive-xetex
          sudo apt-get install -y imagemagick
          sudo apt-get install -y nodejs npm
          sudo apt-get install -y lua5.3 liblua5.3-dev 
          sudo update-alternatives --install /usr/bin/lua lua-interpreter /usr/bin/lua5.3 130 
          sudo update-alternatives --install /usr/bin/luac lua-compiler /usr/bin/luac5.3 130
          sudo apt-get install -y luarocks
          sudo luarocks install luafilesystem
          sudo luarocks install lua-toml
          sudo luarocks install f-strings
          sudo luarocks install penlight
          sudo npm install --global mermaid-filter
        shell: bash
      - name: Build HTML
        run: |
          lua ./scripts/lua/build.lua --html
        shell: bash
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire ./docs
          path: './docs'
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04
    needs: build

    permissions:
      contents: read
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      deployments: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1